# -*- coding: utf-8 -*-
"""Optimize CNN Model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Aon1RrbP-uWXqeW1Q0xZ3CNOeEsNF__J
"""

!pip install keras-tuner

import tensorflow as tf
from tensorflow import keras
import numpy as np

(xtrain,ytrain),(xtest,ytest)=keras.datasets.fashion_mnist.load_data()

xtrain[0].shape

xtrain=xtrain/255
xtest=xtest/255

xtrain[1]

xtrain=xtrain.reshape(len(xtrain),28,28,1)
xtest=xtest.reshape(len(xtest),28,28,1)

xtrain[0].shape

def build_model(hp):
  model=keras.Sequential([
      keras.layers.Conv2D(
          filters=hp.Int('con_1_filter',min_value=64,max_value=512,step=32),
          kernel_size=hp.Choice('con_1_kernel',values=[3,5]),
          activation='relu',
          input_shape=(28,28,1)
      ),
      keras.layers.Conv2D(
          filters=hp.Int('con_2_filter',min_value=32,max_value=256,step=32),
          kernel_size=hp.Choice('con_2_kernel',values=[3,5]),
          activation='relu'),
      keras.layers.Flatten(),
      keras.layers.Dense(
          units=hp.Int('dense_1_units',min_value=32,max_value=512),
          activation='relu'),
      keras.layers.Dense(10,activation='softmax')
  ])
  model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate',values=[1e-2,1e-3,1e-4])),loss='sparse_categorical_crossentropy',metrics=['accuracy'])
  return model

from keras_tuner.tuners import RandomSearch
from keras_tuner.engine.hyperparameters import HyperParameters

tuners=RandomSearch(build_model,objective='val_accuracy',max_trials=5,executions_per_trial=3,directory='Project_mnist',project_name='mnist')

tuners.search(xtrain,ytrain,epochs=10,validation_split=0.15)

model=tuners.get_best_models()[0]

